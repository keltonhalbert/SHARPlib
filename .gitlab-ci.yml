# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: redhat/ubi8

before_script:
  - dnf update -y && dnf install -y cmake gcc gcc-c++ git
  - git submodule update --init --recursive

build:
  stage: build
  script:
    - cmake -B build .
    - cmake --build build -j 4
    - cmake --build build -j 4 --target SHARPlib_tests
  artifacts:
    paths:
      - build 
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - cd build
    - ctest

#deploy:
#  stage: deploy
#  script: echo "Define your deployment script!"
#  environment: production
