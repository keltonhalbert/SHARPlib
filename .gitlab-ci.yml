# Use the official RHEL8 Universal Baseline Image (UBI) 
# to build and test SHARPlib using CMake.

image: redhat/ubi8

variables:
  BUILD_DIR: "buil_${COMPILER}"
  CMAKE_BUILD_OPTIONS: "-j 4"

stages: 
  - build
  - test
  
# Before doing anything, we need to make
# sure the required libraries are installed
# on the image, and initialize submodules
before_script:
  - dnf update -y && dnf install -y cmake make gcc gcc-c++ clang git
  - git submodule update --init --recursive

.parallel-linux:
  parallel:
    matrix:
      - COMPILER: [g++, clang++]

## The CMake build step
build-linux:
  extends: .parallel-linux
  stage: build
  script:
    - echo "BUILDING $COMPILER"
    - cmake -B ${BUILD_DIR} . -DCMAKE_CXX_COMPILER=$COMPILER
    - cmake --build ${BUILD_DIR} $CMAKE_BUILD_OPTIONS 
    - cmake --build ${BUILD_DIR} $CMAKE_BUILD_OPTIONS --target SHARPlib_tests
  artifacts:
    expire_in: 5 mins
    paths:
      - ${BUILD_DIR}

# run tests using the binary built before
test-linux:
  extends: .parallel-linux
  stage: test
  script:
    - echo "TESTING $COMPILER"
    - cd ${BUILD_DIR}
    - ctest --verbose

